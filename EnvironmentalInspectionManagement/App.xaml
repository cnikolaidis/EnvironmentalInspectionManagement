<Application
    x:Class="EnvironmentalInspectionManagement.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:EnvironmentalInspectionManagement.BusinessLogic.ViewModels.RenderViewModels;assembly=EnvironmentalInspectionManagement.BusinessLogic"
    xmlns:renderViews="clr-namespace:EnvironmentalInspectionManagement.Presentation.Views.RenderViews;assembly=EnvironmentalInspectionManagement.Presentation"
    StartupUri="pack://application:,,,/EnvironmentalInspectionManagement.Presentation;component/LogWindow.xaml">

    <Application.Resources>

        <!--MENU RELATED VIEWS-->
        <DataTemplate DataType="{x:Type vm:StatisticsViewModel}">
            <renderViews:StatisticsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:DictionaryViewModel}">
            <renderViews:DictionaryView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:OrganizationsViewModel}">
            <renderViews:OrganizationsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:CasesViewModel}">
            <renderViews:CasesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:UserManagementViewModel}">
            <renderViews:UserManagementView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:PreferencesViewModel}">
            <renderViews:PreferencesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:OtherDictionariesViewModel}">
            <renderViews:OtherDictionariesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LogMonitoringViewModel}">
            <renderViews:LogMonitoringView/>
        </DataTemplate>

        <!--OTHER DICTIONARIES RELATED VIEWS-->
        <DataTemplate DataType="{x:Type vm:NaceCodeSectorsViewModel}">
            <renderViews:NaceCodeSectorsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:NaceCodesViewModel}">
            <renderViews:NaceCodesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:InspectorsViewModel}">
            <renderViews:InspectorsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:RegionalUnitiesViewModel}">
            <renderViews:RegionalUnitiesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:TaxOfficesViewModel}">
            <renderViews:TaxOfficesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:WorkSubcategoriesViewModel}">
            <renderViews:WorkSubcategoriesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:RegionsViewModel}">
            <renderViews:RegionsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:WorkCategoriesViewModel}">
            <renderViews:WorkCategoriesView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AutopsyDocumentCategoriesViewModel}">
            <renderViews:AutopsyDocumentCategoriesView/>
        </DataTemplate>

        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border
                            x:Name="Bd"
                            Padding="17,0,17,0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            Uid="Border_38">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Content="{TemplateBinding Header}"
                                ContentSource="Header"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Uid="ContentPresenter_33"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#F000"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Fonts/Roboto/#Roboto"/>
            <Setter Property="FontWeight" Value="ExtraLight"/>
            <Setter Property="Background" Value="#C000"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="-5,0,0,0"/>
            <Setter Property="Padding" Value="0,10,0,10"/>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#F000"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsMouseOver"  Value="True">
                    <Setter Property="Background" Value="#F000"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Height="1"
                            SnapsToDevicePixels="true"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="#383838" BorderThickness="0" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="0" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#383838" BorderThickness="0" Background="#383838" Padding="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" 
                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                  Background="#383838" Margin="0" Padding="0">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Rectangle Fill="#383838" HorizontalAlignment="Left" Margin="0" Width="0"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Application.Resources>

</Application>
